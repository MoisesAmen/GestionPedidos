services:
  # PostgreSQL para escritura
  postgres:
    image: postgres:14-alpine
    container_name: order-management-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_order_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - order-management-network
    restart: unless-stopped

  # PgAdmin para PostgreSQL
  pgadmin:
    image: dpage/pgadmin4
    container_name: order-management-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - pgadmin_order_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - order-management-network
    restart: unless-stopped

  # MongoDB para lectura
  mongodb:
    image: mongo:latest
    container_name: order-management-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
    volumes:
      - mongodb_order_data:/data/db
    ports:
      - "${MONGO_PORT}:27017"
    networks:
      - order-management-network
    restart: unless-stopped

  # Mongo Express para MongoDB
  mongo-express:
    image: mongo-express:latest
    container_name: order-management-mongo-express
    ports:
      - "${MONGO_EXPRESS_PORT}:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USER}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
    depends_on:
      - mongodb
    networks:
      - order-management-network
    restart: unless-stopped

networks:
  order-management-network:
    name: order-management-network

volumes:
  postgres_order_data:
    name: postgres_order_data
  pgadmin_order_data:
    name: pgadmin_order_data
  mongodb_order_data:
    name: mongodb_order_data